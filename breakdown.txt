So for the project, we'll need to separate out methods/classes/functions. 

1. Input Verification
	verifies code maker and breaker's inputs. Should this be in the same method or two separate methods? 
	-- I'm thinking 2, because this way the maker's input can call that code snippet Ian gave us as part of it,
	plus that also keeps the two players separated within the code as much as possible

2. Code Choosing-- variables for letters/rounds
	Takes the first input about how many letters are available (up to 26, so this needs to be verifiable input) 
	and how many rounds. These variables need to be used later in the program, so I'm thinking they should stay 
	in the main function.

3. Outputs for the code breaker's guesses
	Need to check the guess input against the stored code. This can be a single method called by the 
	actual guess input. What we need to decide on his how the code and guess will be stored and verified.
	An array may work, like what we used for the hangman game last semester to check and verify it. 
	If any of us has really good codes for that we can probably recycle a lot of the basics, 
	just transpose it to java instead of c++. 


I think that really, this all comes down to 4 main parts of the program: 
1. the main function: 
	holds the do/while loop for the actual gameplay
	calls all the methods
2 & 3. the verifications
	checking inputs for guesser/maker
4. code guesses
	handles the guesses once they've had input verification


We also need to decide on a consistent code style. How do we want the indentations? Do we indent at all? 
How do we want to comment? I think we should do a comment above all classes and methods describing what they are, 
what they do, and what the variables are, sort of what we did in Dave's class. For indentations, after every { I 
tab indent, but if you guys would rather do a space or not at all, we can work it out.
 
